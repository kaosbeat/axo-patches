<patch-1.0 appVersion="1.0.12">
   <obj type="phone_interface_buttons_screen" uuid="accd5cb8-e1f8-4c45-9b93-5b4afa8d4c56" name="phone_interface_buttons_screen_1" x="42" y="42">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="daee1ce6-92c6-4d98-9cb0-801c1ee91042" name="object_1" x="364" y="42">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="daee1ce6-92c6-4d98-9cb0-801c1ee91042">
         <inlets>
            <bool32 name="top"/>
            <bool32 name="bottom"/>
            <bool32 name="toggle1"/>
            <bool32 name="toggle2"/>
            <frac32.positive name="dial1"/>
            <frac32.positive name="dial2"/>
            <frac32.positive name="dial3"/>
            <frac32.positive name="dial4"/>
            <frac32.positive name="dial5"/>
            <frac32.positive name="dial6"/>
            <bool32 name="button1"/>
            <bool32 name="button2"/>
            <bool32 name="button3"/>
            <bool32 name="button4"/>
            <bool32 name="forward"/>
            <bool32 name="backward"/>
            <bool32 name="up"/>
            <bool32 name="down"/>
         </inlets>
         <outlets>
            <charptr32 name="S1L1"/>
            <charptr32 name="S1L2"/>
            <charptr32 name="S1L3"/>
            <charptr32 name="S1L4"/>
            <int32 name="S1mode"/>
            <charptr32 name="S2L1"/>
            <charptr32 name="S2L2"/>
            <charptr32 name="S2L3"/>
            <charptr32 name="S2L4"/>
            <int32 name="S2mode"/>
            <int32 name="cc1"/>
            <bool32 name="cc1trig"/>
            <frac32.positive name="cc1val"/>
            <frac32.bipolar name="o2freq"/>
            <frac32.positive name="vol"/>
            <int32 name="loadpatch"/>
            <bool32 name="loadtrig"/>
         </outlets>
         <displays>
            <int32.label name="d1"/>
         </displays>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[//menu and screen and pot state
char* state[7] = {"filter","reverb","delay","wah", "phaser", "menu", "mixer"};
char* patch[8] = {"effects","dangerine","1976","effectsMic", "sidechain",  "side_bd", "side_cy", "sawdrone"};
int menucount = *(&patch + 1) - patch;
int numstates = *(&state + 1) - state - 1;
int currentstate;
int patchselect;
bool ppwait1;
bool ppwait2;
bool ppwait3;
bool ppwait4;
bool ppwait5;
bool ppwait6;
int32_t lsend;
int timer;



//int *holdp;
//int *inp
//int 

//main menu params
int volhold;

//button debouncing
int toptrig;
int bottomtrig;


//oscilators
int freq1hold;
int freq2hold;

//effects
int flttrig;
int fltstate;
int flt_pitch_hold;
char flt_pitch_c[10];
int flt_reso_hold;
char flt_reso_c[10];


int revtrig;
int revstate;
int rev_amp_hold;
char rev_amp_c[10];
int rev_dec_hold;
char rev_dec_c[10];

int deltrig;
int delstate;
int del_fdbk_hold;
char del_fdbk_c[10];
int del_time_hold;
char del_time_c[10];

int wahtrig;
int wahstate;
int wah_freq_hold;
char wah_freq_c[10];
int wah_reso_hold;
char wah_reso_c[10];


int phstrig;
int phsstate;
int phs_amp_hold;
char phs_amp_c[10];
int phs_dec_hold;
char phs_dec_c[10];



int flgtrig;
int flgstate;
int flg_depth_hold;
char flg_depth_c[10];
int flg_fdbk_hold;
char flg_fdbk_c[10];
int flg_spd_hold;
char flg_spd_c[10];





int mix_Lin_fx_hold;
char mix_Lin_fx_c[10];
int mix_Rin_fx_hold;
char mix_Rin_fx_c[10];
int mix_Lin_dry_hold;
char mix_Lin_dry_c[10];
int mix_Rin_dry_hold;
char mix_Rin_dry_c[10];
int mix_drywet_hold;
char mix_drywet_c[10];




//functions
// function definition to swap the values.
void swap(int& x, int& y) {

   int temp;
   temp = x; /* save the value at address x */
   x = y;    /* put y into x */
   y = temp; /* put x into y */
  
   return;
}

// pot pickup function
int32_t ppchange (int in, int* hold, bool &ppwait){
//	if (timer==0) LogTextMessage((char*)(ppwait));
	if (ppwait==true){
		if (abs(in - *hold)>>20 < 2) {
			ppwait = false;
			
		}
		return *hold; ///goes to out!
	} else {
		*hold = in;
		return in; ///goes to out!
	}
}


//append int tot str
char* addItoS(int i, char* s, char* c){
	int32_t v = __SSAT(i,28)>>21;
	strcpy(&c[2],s);
	c[0] = 1;
	if(v >= 0)
  		c[1] = (uint8_t)(v + 1); // must not be zero !
	else 
	  	c[1] = (uint8_t)(256 + v); 
	return c;
}

char* inttobar(int i) {
	char c[2];
	int32_t v = __SSAT(i,28)>>21;
	if(v >= 0)
  		c[0] = (uint8_t)(v + 1); // must not be zero !
	else 
  		c[0] = (uint8_t)(256 + v); 
//  	char k[5];
//  	strncpy(c,k,5);
//  	k[5] = '\0';
//	return k;
	return (char*)(i);
}

void checkToggleState(int inlet, int &trigstate, int &state){
	if (!(inlet>0) && trigstate) {
   		trigstate = 0;
	}
	if ((inlet>0) && !trigstate) {
   		trigstate = 1;
   		if (state == 1)
   			state = 0;
   		else
   			state = 1;
	}
}






///midiCCthin
void midiCCout(int v, int cc, int channel){
	if (((lsend>v+(1<<19))||(v>lsend+(1<<19))) && (timer>60)) {
	   lsend = v;
	   PatchMidiInHandler(MIDI_DEVICE_INTERNAL ,0,MIDI_CONTROL_CHANGE + (channel-1),cc,__USAT(v>>20,7));
	   timer = 0;
	} else timer++;
}]]></code.declaration>
         <code.init><![CDATA[//state
currentstate = 0;
patchselect = 0;
ppwait1=true; //enable potpickup wait on change
ppwait2=true;
ppwait3=true;
ppwait4=true;
ppwait5=true;
ppwait6=true;
//ppwait1=false; //enable potpickup wait on change
//ppwait2=false;
//ppwait3=false;
//ppwait4=false;
//ppwait5=false;
//ppwait6=false;
timer = 0;

//buttons
toptrig = 0;
bottomtrig = 0;


//outlets
//freq1hold = 0;
//freq2hold = 0;
//volhold = 100<<20;\

flttrig = 0;
fltstate = 0;
flt_pitch_hold = 100<<20;
flt_reso_hold = 100<<20;


revtrig = 0;
revstate = 0;
rev_amp_hold = 100<<20;
rev_dec_hold = 100<<20;

deltrig = 0;
delstate = 0;
del_time_hold = 100<<20;
del_fdbk_hold= 100<<20;


wahtrig = 0;
wahstate = 0;
wah_freq_hold = 100<<20;
wah_reso_hold = 100<<20;


phstrig = 0;
phsstate = 0;
phs_amp_hold = 100<<20;
phs_dec_hold = 100<<20;

flgtrig = 0;
flgstate = 0;
flg_depth_hold = 100<<20;
flg_fdbk_hold= 100<<20;
flg_spd_hold= 100<<20;


mix_Lin_fx_hold= 100<<20;
mix_Rin_fx_hold= 100<<20;
mix_Lin_dry_hold= 100<<20;
mix_Rin_dry_hold= 100<<20;
mix_drywet_hold= 100<<20;





//
//cc1 = 1;
//cc1trig = 0;
//cc1val  = 0;]]></code.init>
         <code.krate><![CDATA[//// pot pickup function declaration
//int32_t ppchange (int32_t in);//, int32_t* hold);
//void swap(int& x, int& y);

outlet_loadtrig = 0;
outlet_S1L1 = "";
outlet_S1L2 = "";
outlet_S1L3 = "";
outlet_S1L4 = "";
///buttonpresses MENU up/down
if ((inlet_top>0) && !toptrig) {
   if (currentstate < numstates) { 
   	currentstate++;
   } else {
   	currentstate = 0;
   }
   toptrig = 1;
   ppwait1=true; //enable potpickup wait on change
   ppwait2=true;
   ppwait3=true;
   ppwait4=true;
   ppwait5=true;
   ppwait6=true;
}
if (!(inlet_top>0) && toptrig) {
   toptrig = 0;
}


if ((inlet_bottom>0) && !bottomtrig) {
   
   if (currentstate > 0) { 
   	currentstate--;
   } else {
   	currentstate = numstates;
   }
   bottomtrig = 1;
   ppwait1=true; //enable potpickup wait on change
   ppwait2=true;
   ppwait3=true;
   ppwait4=true;
   ppwait5=true;
   ppwait6=true;
}


if (!(inlet_bottom>0) && bottomtrig) {
   bottomtrig = 0;
}

//outlet_S1L1 = state[currentstate];

//midiCCout(127, 1, 1);


if (state[currentstate] == "filter"){
	outlet_S2mode = 2;
	checkToggleState(inlet_button1,flttrig, fltstate);

	if (fltstate == 1){
		midiCCout(127<<20, 1, 1);
		outlet_S1L1 = "filter  ON";
	} else {
		midiCCout(0, 1, 1);
		outlet_S1L1 = "filter  OFF";
	}
	midiCCout(ppchange (inlet_dial1, &flt_pitch_hold, ppwait1), 17, 1);
	outlet_S1L2 = addItoS(flt_pitch_hold,"pitch",flt_pitch_c);
	midiCCout(ppchange (inlet_dial2, &flt_reso_hold, ppwait2), 33, 1);
	outlet_S1L3 = addItoS(flt_reso_hold,"reso",flt_reso_c);

}


if (state[currentstate] == "reverb"){
	outlet_S2mode = 2;
	checkToggleState(inlet_button1,revtrig, revstate);

	if (revstate == 1){
		midiCCout(127<<20, 2, 1);
		outlet_S1L1 = "reverb  ON";
	} else {
		midiCCout(0, 2, 1);
		outlet_S1L1 = "reverb  OFF";
	}
	midiCCout(ppchange (inlet_dial1, &rev_amp_hold, ppwait1), 18, 1);
	outlet_S1L2 = addItoS(rev_amp_hold,"amp",rev_amp_c);
	midiCCout(ppchange (inlet_dial2, &rev_dec_hold, ppwait2), 34, 1);
	outlet_S1L3 = addItoS(rev_dec_hold,"dec",rev_dec_c);

}

if (state[currentstate] == "delay"){
	outlet_S2mode = 2;
	checkToggleState(inlet_button1,deltrig, delstate);
	if (delstate == 1){
		outlet_S1L1 = "delay   ON";
		midiCCout(127<<20, 3, 1);
	} else {
		outlet_S1L1 = "delay   OFF";
		midiCCout(0, 3, 1);
	}
	midiCCout(ppchange (inlet_dial1, &del_fdbk_hold, ppwait1), 19, 1);
	outlet_S1L2 = addItoS(del_fdbk_hold,"fdbk",del_fdbk_c);
	midiCCout(ppchange (inlet_dial2, &del_time_hold, ppwait2), 35, 1);		
	outlet_S1L3 = addItoS(del_time_hold,"time",del_time_c);

}


if (state[currentstate] == "wah"){
	outlet_S2mode = 2;
	checkToggleState(inlet_button1,wahtrig, wahstate);
	if (wahstate == 1){
		outlet_S1L1 = "wah     ON";
		midiCCout(127<<20, 4, 1);
	} else {
		outlet_S1L1 = "wah     OFF";
		midiCCout(0, 4, 1);
	}
	midiCCout(ppchange (inlet_dial1, &wah_freq_hold, ppwait1), 20, 1);
	outlet_S1L2 = addItoS(wah_freq_hold,"freq",wah_freq_c);
	midiCCout(ppchange (inlet_dial2, &wah_reso_hold, ppwait2), 36, 1);		
	outlet_S1L3 = addItoS(wah_reso_hold,"reso",wah_reso_c);

}
if (state[currentstate] == "phaser"){
	outlet_S2mode = 2;
	checkToggleState(inlet_button1,phstrig, phsstate);
	if (phsstate == 1){
		outlet_S1L1 = "phaser  ON";
		midiCCout(127<<20, 5, 1);
	} else {
		outlet_S1L1 = "phaser  OFF";
		midiCCout(0, 5, 1);
	}
	midiCCout(ppchange (inlet_dial1, &phs_amp_hold, ppwait1), 21, 1);
	outlet_S1L2 = addItoS(phs_amp_hold,"spd",phs_amp_c);
	midiCCout(ppchange (inlet_dial2, &phs_dec_hold, ppwait2), 37, 1);		
	outlet_S1L3 = addItoS(phs_dec_hold,"depth",phs_dec_c);

}

if (state[currentstate] == "menu"){
	outlet_S2mode = 2;
	outlet_S1L1 = "menu";
	patchselect = inlet_dial5>>23;
	disp_d1 = patchselect%menucount;
	outlet_S1L2 = patch[patchselect%menucount];
	outlet_S1L3 = "press B4";
	outlet_S1L4 = "to load";
	outlet_loadpatch = patchselect%menucount;
	outlet_loadtrig = inlet_button4;
	

}

if (state[currentstate] == "mixer"){
//	outlet_S2mode = 0;
//	outlet_S1L1 = "mixer";
//	midiCCout(ppchange (inlet_dial5, &mix_drywet_hold, ppwait5), 114, 1);
//	outlet_S1L3 = addItoS(mix_drywet_hold,"dry/wet",mix_drywet_c);
//	
	midiCCout(ppchange (inlet_dial1, &mix_Lin_fx_hold, ppwait1), 96, 1);
	outlet_S1L1 = addItoS(mix_Lin_fx_hold,"L_fx",mix_Lin_fx_c);
	midiCCout(ppchange (inlet_dial2, &mix_Rin_fx_hold, ppwait2), 97, 1);		
	outlet_S1L2 = addItoS(mix_Rin_fx_hold,"R_fx",mix_Rin_fx_c);
//	midiCCout(ppchange (inlet_dial3, &mix_Lin_dry_hold, ppwait3), 112, 1);
//	outlet_S1L3 = addItoS(mix_Lin_dry_hold,"L_dry",mix_Lin_dry_c);
//	midiCCout(ppchange (inlet_dial4, &mix_Rin_dry_hold, ppwait4), 113, 1);		
//	outlet_S1L4 = addItoS(mix_Rin_dry_hold,"R_dry",mix_Rin_dry_c);


}




// //works with stomps/flanger
//if (state[currentstate] == "flanger"){
//	checkToggleState(inlet_button1,flgtrig, flgstate);
//	if (flgstate == 1){
//		outlet_S1L1 = "flanger ON";
//		midiCCout(127<<20, 6, 1);
//	} else {
//		outlet_S1L1 = "flanger OFF";
//		midiCCout(0, 6, 1);
//	}
//	midiCCout(ppchange (inlet_dial1, &flg_depth_hold, ppwait1), 22, 1);
//	outlet_S1L2 = addItoS(flg_depth_hold,"dpth",flg_depth_c);
//	midiCCout(ppchange (inlet_dial2, &flg_fdbk_hold, ppwait2), 38, 1);		
//	outlet_S1L3 = addItoS(flg_fdbk_hold,"fdbk",flg_fdbk_c);
//	midiCCout(ppchange (inlet_dial3, &flg_spd_hold, ppwait3), 54, 1);		
//	outlet_S1L4 = addItoS(flg_spd_hold,"spd",flg_spd_c);
//]]></code.krate>
      </object>
   </patchobj>
   <obj type="midi/in/keyb note" uuid="ac0cd98e6c0373b7be73d25900342a62ebcf5f" name="keyb_1" x="784" y="154">
      <params/>
      <attribs>
         <spinner attributeName="note" value="41"/>
      </attribs>
   </obj>
   <obj type="env/adsr m" uuid="98bd39fb828c392b28126d259cb5175e6f6ea34b" name="adsr_1" x="1022" y="182">
      <params>
         <frac32.s.map name="a" value="-25.0"/>
         <frac32.s.map name="d" value="0.0"/>
         <frac32.u.map name="s" value="42.5"/>
         <frac32.s.map name="r" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="patch/load i" uuid="b79124f5b7d1e8b39e187677ddab6260ce8c60a3" name="load_1" x="616" y="294">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/in left" uuid="d40e60b7641fe75af4d7c91b45bb038aacafc52e" name="in_1" x="182" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 g" uuid="221f038da51943034a75e442c90624fcebfe6112" name="mix_1" x="322" y="420">
      <params>
         <frac32.u.map name="gain1" MidiCC="96" value="50.0"/>
         <frac32.u.map name="gain2" MidiCC="97" value="50.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/vcf3" uuid="92455c652cd098cbb682a5497baa18abbf2ef865" name="vcf3_1" x="560" y="434">
      <params>
         <frac32.s.map name="pitch" MidiCC="17" value="36.0"/>
         <frac32.u.map name="reso" MidiCC="33" value="50.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/inconfig l" uuid="7007d026acb7c3586f60a7f0898718d1ca7e0607" name="inconfig_2" x="154" y="448">
      <params/>
      <attribs>
         <combo attributeName="gain" selection="24dB"/>
         <combo attributeName="boost" selection="0dB"/>
      </attribs>
   </obj>
   <obj type="stomps/reverb1" uuid="5354d961-a49b-47d3-acba-0d662ba23576" name="obj_6" x="742" y="448">
      <params>
         <bool32.tgl name="on" MidiCC="2" value="1"/>
         <frac32.u.map name="*c_1" MidiCC="18" value="49.0"/>
         <frac32.u.map name="decay" MidiCC="34" value="56.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="stomps/delay" uuid="33075cfd-4c0a-422f-8469-682cdd6e6ec1" name="obj_4" x="882" y="448">
      <params>
         <bool32.tgl name="on" MidiCC="3" value="0"/>
         <frac32.u.map name="fdbk" MidiCC="19" value="54.0"/>
         <frac32.u.map name="time" MidiCC="35" value="16.999999523162842"/>
      </params>
      <attribs/>
   </obj>
   <obj type="stomps/wah1" uuid="eb6024a1-5572-408b-bf95-dfaf705a8bc9" name="obj_7" x="1022" y="448">
      <params>
         <bool32.tgl name="on" MidiCC="4" value="1"/>
         <frac32.u.map name="freq" MidiCC="20" value="53.0"/>
         <frac32.u.map name="flt:reso" MidiCC="36" value="41.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="jho/stomp/phaser" uuid="8309d67b-4f2d-4cf1-a10c-5ddf5bc344cd" name="obj_3" x="1148" y="462">
      <params>
         <frac32.s.map name="speed" MidiCC="21" value="50.0"/>
         <frac32.u.map name="waveform" value="54.0"/>
         <frac32.u.map name="depth" MidiCC="37" value="50.0"/>
         <frac32.u.map name="offset" value="32.0"/>
         <frac32.u.map name="blend" value="33.0"/>
         <bool32.tgl name="on" MidiCC="5" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="1456" y="462">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/xfade" uuid="375dc91d218e96cdc9cbc7e92adb48f705ef701a" name="xfade_1" x="1344" y="490">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/out left" uuid="b11a3c09b2fdd575ea8212f2ce7743d5269253b1" name="out_1" x="1540" y="490">
      <params/>
      <attribs/>
   </obj>
   <obj type="audio/inconfig r" uuid="8468fe7907553f335959a7f69cbc5a1f7b5d4d1d" name="inconfig_1" x="154" y="518">
      <params/>
      <attribs>
         <combo attributeName="gain" selection="24dB"/>
         <combo attributeName="boost" selection="0dB"/>
      </attribs>
   </obj>
   <obj type="stomps/ab" uuid="5596ce30-e752-414a-8e6b-0b1b2dbb4802" name="obj_2" x="588" y="574">
      <params>
         <bool32.tgl name="a/b" MidiCC="1" value="0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 2 g" uuid="221f038da51943034a75e442c90624fcebfe6112" name="mix_2" x="322" y="588">
      <params>
         <frac32.u.map name="gain1" MidiCC="112" value="50.0"/>
         <frac32.u.map name="gain2" MidiCC="113" value="50.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/in right" uuid="5f35c9f87b3f291a8120a10db71935bebd186469" name="in_2" x="168" y="616">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="obj_6" outlet="outL"/>
         <dest obj="obj_4" inlet="in"/>
      </net>
      <net>
         <source obj="obj_4" outlet="out"/>
         <dest obj="obj_7" inlet="in"/>
      </net>
      <net>
         <source obj="obj_7" outlet="out"/>
         <dest obj="obj_3" inlet="in"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="forward"/>
         <dest obj="object_1" inlet="forward"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="backward"/>
         <dest obj="object_1" inlet="backward"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="top"/>
         <dest obj="object_1" inlet="top"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="bottom"/>
         <dest obj="object_1" inlet="bottom"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="toggle 1"/>
         <dest obj="object_1" inlet="toggle1"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="toggle 2"/>
         <dest obj="object_1" inlet="toggle2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 1"/>
         <dest obj="object_1" inlet="dial1"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 2"/>
         <dest obj="object_1" inlet="dial2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 3"/>
         <dest obj="object_1" inlet="dial3"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 4"/>
         <dest obj="object_1" inlet="dial4"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 5"/>
         <dest obj="object_1" inlet="dial5"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 6"/>
         <dest obj="xfade_1" inlet="c"/>
         <dest obj="object_1" inlet="dial6"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="up"/>
         <dest obj="object_1" inlet="up"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="down"/>
         <dest obj="object_1" inlet="down"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L1"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L1"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L2"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L2"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L3"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L3"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L4"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L4"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1mode"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1mode"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L1"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L1"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L2"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L2"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L3"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L3"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L4"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L4"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2mode"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2mode"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 2"/>
         <dest obj="object_1" inlet="button2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 3"/>
         <dest obj="object_1" inlet="button3"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 4"/>
         <dest obj="object_1" inlet="button4"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 1"/>
         <dest obj="object_1" inlet="button1"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="vcf3_1" inlet="in"/>
         <dest obj="obj_2" inlet="a"/>
      </net>
      <net>
         <source obj="obj_2" outlet="out"/>
         <dest obj="obj_6" inlet="inL"/>
      </net>
      <net>
         <source obj="vcf3_1" outlet="out"/>
         <dest obj="obj_2" inlet="b"/>
      </net>
      <net>
         <source obj="obj_3" outlet="out"/>
         <dest obj="xfade_1" inlet="i1"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="scope2"/>
      </net>
      <net>
         <source obj="in_2" outlet="wave"/>
         <dest obj="mix_1" inlet="in2"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="object_1" outlet="loadpatch"/>
         <dest obj="load_1" inlet="i"/>
      </net>
      <net>
         <source obj="object_1" outlet="loadtrig"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="in_1" outlet="wave"/>
         <dest obj="mix_1" inlet="in1"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="xfade_1" outlet="o"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="xfade_1" inlet="i2"/>
      </net>
      <net>
         <source obj="adsr_1" outlet="env"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="keyb_1" outlet="gate"/>
         <dest obj="adsr_1" inlet="gate"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="out_1" inlet="wave"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
      <MidiChannel>1</MidiChannel>
      <NPresets>8</NPresets>
      <NPresetEntries>32</NPresetEntries>
      <NModulationSources>8</NModulationSources>
      <NModulationTargetsPerSource>8</NModulationTargetsPerSource>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>2081</x>
      <y>225</y>
      <width>1646</width>
      <height>947</height>
   </windowPos>
</patch-1.0>