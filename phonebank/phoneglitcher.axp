<patch-1.0 appVersion="1.0.12">
   <obj type="audio/inconfig" uuid="9a80ef3c19f2a8f81da3a3b7c1c44d18126b97d9" name="adcconfig1" x="588" y="42">
      <params/>
      <attribs>
         <combo attributeName="gain" selection="30dB"/>
         <combo attributeName="boost" selection="20dB"/>
         <combo attributeName="mode" selection="Mono(L)"/>
      </attribs>
   </obj>
   <obj type="phone_interface_buttons_screen" uuid="13898c49-e3f8-46d8-a436-2544f65c0fde" name="phone_interface_buttons_screen_1" x="98" y="84">
      <params/>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="daee1ce6-92c6-4d98-9cb0-801c1ee91042" name="object_1" x="350" y="84">
      <params/>
      <attribs/>
      <object id="patch/object" uuid="daee1ce6-92c6-4d98-9cb0-801c1ee91042">
         <inlets>
            <bool32 name="top"/>
            <bool32 name="bottom"/>
            <bool32 name="toggle1"/>
            <bool32 name="toggle2"/>
            <frac32.positive name="dial1"/>
            <frac32.positive name="dial2"/>
            <frac32.positive name="dial3"/>
            <frac32.positive name="dial4"/>
            <frac32.positive name="dial5"/>
            <frac32.positive name="dial6"/>
            <bool32 name="button1"/>
            <bool32 name="button2"/>
            <bool32 name="button3"/>
            <bool32 name="button4"/>
            <bool32 name="forward"/>
            <bool32 name="backward"/>
            <bool32 name="up"/>
            <bool32 name="down"/>
            <int32 name="beat"/>
         </inlets>
         <outlets>
            <charptr32 name="S1L1"/>
            <charptr32 name="S1L2"/>
            <charptr32 name="S1L3"/>
            <charptr32 name="S1L4"/>
            <int32 name="S1mode"/>
            <charptr32 name="S2L1"/>
            <charptr32 name="S2L2"/>
            <charptr32 name="S2L3"/>
            <charptr32 name="S2L4"/>
            <int32 name="S2mode"/>
            <frac32.positive name="chdepth"/>
            <frac32.positive name="chspeed"/>
            <frac32.positive name="revsize"/>
            <frac32.positive name="revdecay"/>
            <frac32.positive name="vol"/>
            <int32 name="loadpatch"/>
            <bool32 name="loadtrig"/>
            <frac32.positive name="chorus"/>
            <frac32.positive name="reverb"/>
            <int32 name="beatinit"/>
         </outlets>
         <displays>
            <int32.label name="d1"/>
         </displays>
         <params/>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[//menu and screen and pot state
char* state[6] = {"bytebeat","rate","env","fx", "tuner", "menu"};
char* patch[15] = {"menu","effects","dangerine","1976","effectsMic", "sidechain",  "side_bd", "side_cy", "sawdrone", "answmachine", "sawdrone2","granclds","dronephone", "tanpura", "bytebeat"};
int menucount = *(&patch + 1) - patch;
int numstates = *(&state + 1) - state - 1;
int currentstate;
int prevstate;
int patchselect;
bool ppwait1;
bool ppwait2;
bool ppwait3;
bool ppwait4;
bool ppwait5;
bool ppwait6;
int32_t lsend;
int timer;


int beatinit;

//main menu params
int volhold;

//button debouncing
int toptrig;
int bottomtrig;
int button1trig;

//bytebeat
int rsttrig;
int rststate;
int start_pos_hold;
char start_pos_c[10];
int x_hold;
char x_c[10];
int y_hold;
char y_c[10];
int z_hold;
char z_c[10];

//rate
int rate_hold;
char rate_c[10];
int div_hold;
char div_c[10];
int beat_hold;
char beat_c[10];

/// env menu
int env_tresh_hold;
char env_tresh_c[10];
int env_att_hold;
char env_att_c[10];
int env_dec_hold;
char env_dec_c[10];
int env_wet_hold;
char env_wet_c[10];


//menu fx
int ch_depth_hold;
char ch_depth_c[10];
int ch_spd_hold;
char ch_spd_c[10];
int rev_size_hold;
char rev_size_c[10];
int rev_decay_hold;
char rev_decay_c[10];

//tuner
int tuner_hold;
char tuner_c[10];


//functions
// function definition to swap the values.
void swap(int& x, int& y) {

   int temp;
   temp = x; /* save the value at address x */
   x = y;    /* put y into x */
   y = temp; /* put x into y */
  
   return;
}

// pot pickup function
int32_t ppchange (int in, int* hold, bool &ppwait){
//	if (timer==0) LogTextMessage((char*)(ppwait));
	if (ppwait==true){
		if (abs(in - *hold)>>20 < 2) {
			ppwait = false;
			
		}
		return *hold; ///goes to out!
	} else {
		*hold = in;
		return in; ///goes to out!
	}
}


//append int tot str
char* addItoS(int i, char* s, char* c){
	int32_t v = __SSAT(i,28)>>21;
	strcpy(&c[2],s);
	c[0] = 1;
	if(v >= 0)
  		c[1] = (uint8_t)(v + 1); // must not be zero !
	else 
	  	c[1] = (uint8_t)(256 + v); 
	return c;
}

char* inttobar(int i) {
	char c[2];
	int32_t v = __SSAT(i,28)>>21;
	if(v >= 0)
  		c[0] = (uint8_t)(v + 1); // must not be zero !
	else 
  		c[0] = (uint8_t)(256 + v); 
//  	char k[5];
//  	strncpy(c,k,5);
//  	k[5] = '\0';
//	return k;
	return (char*)(i);
}

void checkToggleState(int inlet, int &trigstate, int &state){
	if (!(inlet>0) && trigstate) {
   		trigstate = 0;
	}
	if ((inlet>0) && !trigstate) {
   		trigstate = 1;
   		if (state == 1)
   			state = 0;
   		else
   			state = 1;
	}
}






///midiCCthin
void midiCCout(int v, int cc, int channel){
	if (((lsend>v+(1<<19))||(v>lsend+(1<<19))) && (timer>60)) {
	   lsend = v;
	   PatchMidiInHandler(MIDI_DEVICE_INTERNAL ,0,MIDI_CONTROL_CHANGE + (channel-1),cc,__USAT(v>>20,7));
	   timer = 0;
	} else {
		timer++;
	}
}]]></code.declaration>
         <code.init><![CDATA[//state
currentstate = 0;
prevstate = 0;
patchselect = 0;
ppwait1=true; //enable potpickup wait on change
ppwait2=true;
ppwait3=true;
ppwait4=true;
ppwait5=true;
ppwait6=true;
//ppwait1=false; //enable potpickup wait on change
//ppwait2=false;
//ppwait3=false;
//ppwait4=false;
//ppwait5=false;
//ppwait6=false;
timer = 0;
beatinit = 15;
//buttons
toptrig = 0;
bottomtrig = 0;
button1trig = 0;

//bytebeat
rsttrig = 0;
rststate = 0;
start_pos_hold = 7 <<20;
x_hold = 74 <<20; //0.5
y_hold = 47 <<20; //0.5
z_hold = 21 <<20; //32


//rate
rate_hold = 31 <<20; // -44
div_hold = 31 <<20; //12.5
beat_hold  = 15 <<20;

/// env menu
env_tresh_hold  = 0 <<20;
env_att_hold  = 0 <<20;
env_dec_hold = 0 <<20;
env_wet_hold  = 127 <<20;

//fx menu
ch_depth_hold = 64<<20;
ch_spd_hold = 1<<20;
rev_size_hold = 64<<20;
rev_decay_hold = 64<<20;

//tuner
tuner_hold= 32<<20;]]></code.init>
         <code.krate><![CDATA[//// pot pickup function declaration
//int32_t ppchange (int32_t in);//, int32_t* hold);
//void swap(int& x, int& y);

outlet_loadtrig = 0;
outlet_S1L1 = "";
outlet_S1L2 = "";
outlet_S1L3 = "";
outlet_S1L4 = "";

outlet_beatinit = beatinit;

outlet_chorus = inlet_toggle1<<20;
outlet_reverb = inlet_toggle2<<20;




///buttonpresses MENU up/down
if (((inlet_top>0)) && !toptrig) {
   if (currentstate < numstates) { 
   	currentstate++;
   } else {
   	currentstate = 0;
   }
   toptrig = 1;
   ppwait1=true; //enable potpickup wait on change
   ppwait2=true;
   ppwait3=true;
   ppwait4=true;
   ppwait5=true;
   ppwait6=true;
}
if (!((inlet_top>0)) && toptrig) {
   toptrig = 0;
}


if (((inlet_bottom>0)) && !bottomtrig) {
   
   if (currentstate > 0) { 
   	currentstate--;
   } else {
   	currentstate = numstates;
   }
   bottomtrig = 1;
   ppwait1=true; //enable potpickup wait on change
   ppwait2=true;
   ppwait3=true;
   ppwait4=true;
   ppwait5=true;
   ppwait6=true;
}


if (!((inlet_bottom>0)) && bottomtrig) {
   bottomtrig = 0;
}


if (state[currentstate] == "bytebeat"){
	outlet_S1mode = 0;
	outlet_S2mode = 2;

	
	midiCCout(ppchange (inlet_dial1, &start_pos_hold, ppwait1), 17, 1);
	outlet_S1L1 = addItoS(start_pos_hold,"strtpos",start_pos_c);
	midiCCout(ppchange (inlet_dial2, &x_hold, ppwait2), 33, 1);
	outlet_S1L2 = addItoS(x_hold,"x",x_c);
	midiCCout(ppchange (inlet_dial3, &y_hold, ppwait3), 34, 1);
	outlet_S1L3 = addItoS(y_hold,"y",y_c);
	midiCCout(ppchange (inlet_dial4, &z_hold, ppwait4), 35, 1);
	outlet_S1L4 = addItoS(z_hold,"z",z_c);
}


if (state[currentstate] == "rate"){
	outlet_S1mode = 0;
	outlet_S2mode = 2;
//	checkToggleState(inlet_button1,revtrig, revstate);
	beat_hold = inlet_beat<<23;
	outlet_S1L1 = addItoS(beat_hold,"byteB",beat_c);

	midiCCout(ppchange (inlet_dial5, &rate_hold, ppwait5), 15, 1);
	outlet_S1L3 = addItoS(rate_hold,"rate",rate_c);
	midiCCout(ppchange (inlet_dial6, &div_hold, ppwait6), 16, 1);
	outlet_S1L2 = addItoS(div_hold,"div",div_c);
	

}


if (state[currentstate] == "all"){
	outlet_S1mode = 0;
	outlet_S2mode = 0;
//	checkToggleState(inlet_button1,revtrig, revstate);


	midiCCout(ppchange (inlet_dial5, &rate_hold, ppwait5), 15, 1);
	outlet_S1L3 = addItoS(rate_hold,"rate",rate_c);
	
	midiCCout(ppchange (inlet_dial6, &div_hold, ppwait6), 16, 1);
	outlet_S1L2 = addItoS(div_hold,"div",div_c);
	
	midiCCout(ppchange (inlet_dial1, &start_pos_hold, ppwait1), 17, 1);
	outlet_S2L1 = addItoS(start_pos_hold,"strtp",start_pos_c);
	
	midiCCout(ppchange (inlet_dial2, &x_hold, ppwait2), 33, 1);
	outlet_S2L2 = addItoS(x_hold,"x",x_c);
	
	midiCCout(ppchange (inlet_dial3, &y_hold, ppwait3), 34, 1);
	outlet_S2L3 = addItoS(y_hold,"y",y_c);
	
	midiCCout(ppchange (inlet_dial4, &z_hold, ppwait4), 35, 1);
	outlet_S2L4 = addItoS(z_hold,"z",z_c);
}



if (state[currentstate] == "env"){
	outlet_S1mode = 2;
	outlet_S2mode = 0;

	midiCCout(ppchange (inlet_dial1, &env_tresh_hold, ppwait1), 20, 1);
	outlet_S2L1 = addItoS(env_tresh_hold,"tresh",env_tresh_c);
	midiCCout(ppchange (inlet_dial2, &env_att_hold, ppwait2), 21, 1);		
	outlet_S2L2 = addItoS(env_att_hold,"attck",env_att_c);
	midiCCout(ppchange (inlet_dial3, &env_dec_hold, ppwait3), 22, 1);		
	outlet_S2L3 = addItoS(env_dec_hold,"decay",env_dec_c);
	midiCCout(ppchange (inlet_dial4, &env_wet_hold, ppwait4), 23, 1);		
	outlet_S2L4 = addItoS(env_wet_hold,"env",env_wet_c);

}

if (state[currentstate] == "fx"){
	outlet_S1mode = 0;
	outlet_S2mode = 0;
	if(inlet_toggle1==1){
		outlet_S1L1 = "chorus  ON";
		//midiCCout(1<<20, 60, 1);
	} else {
		outlet_S1L1 = "chorus OFF";
		//midiCCout(0, 60, 1);
	}
	outlet_chdepth = ppchange (inlet_dial1, &ch_depth_hold, ppwait1);
	outlet_S1L2 = addItoS(ch_depth_hold,"depth",ch_depth_c);
	outlet_chspeed = ppchange (inlet_dial2, &ch_spd_hold, ppwait2);
	outlet_S1L3 = addItoS(ch_spd_hold,"speed",ch_spd_c);
	if(inlet_toggle2==1){
		outlet_S2L1 = "reverb  ON";
		//midiCCout(1<<20, 61, 1);
	} else {
		outlet_S2L1 = "reverb OFF";
		//midiCCout(0, 61, 1);
	}
	outlet_revsize = ppchange (inlet_dial3, &rev_size_hold, ppwait3);
	outlet_S2L2 = addItoS(rev_size_hold,"size",rev_size_c);
	outlet_revdecay = ppchange (inlet_dial4, &rev_decay_hold, ppwait4);
	outlet_S2L3 = addItoS(rev_decay_hold,"decay",rev_decay_c);
}

if (state[currentstate] == "tuner"){
	outlet_S1mode = 0;
	outlet_S2mode = 2;


	midiCCout(ppchange (inlet_dial5, &tuner_hold, ppwait5), 85, 1);
	outlet_S1L3 = addItoS(tuner_hold,"tuner",tuner_c);

}



if (state[currentstate] == "menu"){
	outlet_S2mode = 2;
	outlet_S1L1 = "menu";
	patchselect = inlet_dial5>>23;
	disp_d1 = patchselect%menucount;
	outlet_S1L2 = patch[patchselect%menucount];
	outlet_S1L3 = "press B4";
	outlet_S1L4 = "to load";
	outlet_loadpatch = patchselect%menucount;
	outlet_loadtrig = inlet_button4;
	

}]]></code.krate>
      </object>
   </patchobj>
   <obj type="audio/in stereo" uuid="99848ad6d90a8e615e83b2e619cfc806f28e7281" name="adc_1" x="588" y="126">
      <params/>
      <attribs/>
   </obj>
   <obj type="gain/vca" uuid="a9f2dcd18043e2f47364e45cb8814f63c2a37c0d" name="vca_1" x="1428" y="168">
      <params/>
      <attribs/>
   </obj>
   <obj type="mix/mix 1 g" uuid="e6982841c1bf323ee2062a4b6cc2737adafbd668" name="mix_3" x="1568" y="168">
      <params>
         <frac32.u.map name="gain1" MidiCC="23" value="63.99999952316284"/>
      </params>
      <attribs/>
   </obj>
   <obj type="sptnk/effect/noise gate" uuid="d49f2e43-3acd-4f41-9d78-40beab399c69" name="obj_5" x="854" y="196">
      <params>
         <frac32.u.map name="Treshold" MidiCC="20" value="0.0"/>
         <frac32.s.map name="envelope:a" MidiCC="21" value="-64.0"/>
         <frac32.s.map name="envelope:d" MidiCC="22" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="env/follower" uuid="356ce1d18ac6b51704833f94dac5dea823fb8223" name="env_1" x="1022" y="196">
      <params/>
      <attribs>
         <combo attributeName="time" selection="10.6ms"/>
      </attribs>
   </obj>
   <obj type="stomps/chorus1" uuid="6ca75511-97a0-4cfd-93f7-b5e2e8713f3f" name="obj_1" x="1708" y="252">
      <params>
         <bool32.tgl name="on" MidiCC="60" value="0"/>
         <frac32.u.map name="depth" MidiCC="40" value="63.99999952316284"/>
         <frac32.s.map name="speed" MidiCC="41" value="63.99999952316284"/>
      </params>
      <attribs/>
   </obj>
   <obj type="stomps/reverb1" uuid="fe3469d0-1716-4e05-913e-769400fcbade" name="reverb1_1" x="1820" y="252">
      <params>
         <bool32.tgl name="on" MidiCC="61" value="0"/>
         <frac32.u.map name="*c_1" MidiCC="43" value="32.0"/>
         <frac32.u.map name="decay" MidiCC="44" value="29.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="drj/audio/out_stereo_vol" uuid="awca1a567f535acc21055669829101d3ee7f0189" name="out_stereo_vol_1" x="1932" y="266">
      <params>
         <frac32.u.map name="volume" MidiCC="126" value="64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="patch/load i" uuid="b79124f5b7d1e8b39e187677ddab6260ce8c60a3" name="load_1" x="616" y="280">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_7" x="1134" y="280">
      <params>
         <frac32.u.map name="value" MidiCC="85" value="32.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/div 64" uuid="da82c8ea54e956811f1d7264d921628e3301971e" name="div_1" x="1204" y="280">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial b" uuid="862e7d7f29093cb1ce4aed72244d118ad4d46692" name="dial_5" x="1022" y="336">
      <params>
         <frac32.s.map name="value" MidiCC="15" value="22.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/dial b" uuid="9ffed04e6a3052d9001eda83bae7024cb6d17037" name="dial_8" x="1302" y="336">
      <params/>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="44553fdc8628c67ab535845ed1be304ad6c9553b" name="+_2" x="1218" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="conv/to i" uuid="305966430ee86b5c3b8e18cde0c721657c558a87" name="to_1" x="1372" y="364">
      <params/>
      <attribs/>
   </obj>
   <obj type="hc/osc/beatmachine" uuid="da8bb99a-f490-4ca9-a1ed-e3dba009f1d9" name="beatmachine_1" x="1456" y="364">
      <params/>
      <attribs>
         <table attributeName="beat" table="((t&amp;32*z)?((t*(t^t%y*2)|(t&gt;&gt;4))&gt;&gt;1):(t&gt;&gt;3)|((t&amp;8192)?t&lt;&lt;x:t))"/>
      </attribs>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_3" x="672" y="392">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="40"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="c3" x="882" y="392">
      <params>
         <frac32.u.map name="value" MidiCC="16" value="15.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/div 8" uuid="4a6007f5cb2024c50e8449b3bb6bcaef6ac42edb" name="div_2" x="1162" y="420">
      <params/>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_4" x="1022" y="448">
      <params>
         <frac32.u.map name="value" MidiCC="17" value="45.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="logic/counter2" uuid="d9536f238ab92e53ac93d5927c3b43ceef998dc1" name="counter2_1" x="196" y="462">
      <params>
         <int32 name="maximum" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/+" uuid="b94a9b8e9adcb7d18868c0ee808a9b211b65578d" name="+_1" x="336" y="462">
      <params/>
      <attribs/>
   </obj>
   <obj type="jaffa/math/modulo" uuid="99fec58b-6e2a-47bf-a853-ca56a554dc36" name="modulo_1" x="448" y="490">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_4" x="672" y="490">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="41"/>
      </attribs>
   </obj>
   <obj type="ctrl/i" uuid="a3786816db6ea5bc6ac4193a5cccdb2c83b83496" name="i_3" x="350" y="532">
      <params>
         <int32 name="value" value="16"/>
      </params>
      <attribs/>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_1" x="1022" y="532">
      <params>
         <frac32.u.map name="value" MidiCC="33" value="37.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="disp/i" uuid="5e35fd0c62d81e70017289250cf28edd26e19e4a" name="i_1" x="560" y="560">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_5" x="672" y="588">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="42"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_2" x="1022" y="616">
      <params>
         <frac32.u.map name="value" MidiCC="34" value="23.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_6" x="672" y="686">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="43"/>
      </attribs>
   </obj>
   <obj type="ctrl/dial p" uuid="cc5d2846c3d50e425f450c4b9851371b54f4d674" name="dial_3" x="1022" y="700">
      <params>
         <frac32.u.map name="value" MidiCC="35" value="10.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_7" x="672" y="784">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="60"/>
      </attribs>
   </obj>
   <obj type="midi/out/cc thin" uuid="5255b30d60e50223ed41179d8ce935ba9464de75" name="cc_8" x="672" y="882">
      <params/>
      <attribs>
         <combo attributeName="device" selection="internal port 1"/>
         <spinner attributeName="channel" value="1"/>
         <spinner attributeName="cc" value="61"/>
      </attribs>
   </obj>
   <obj type="disp/dial p" uuid="44fd18b562e434b3230441681132dbeabb15cdc5" name="dial_6" x="812" y="882">
      <params/>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="forward"/>
         <dest obj="object_1" inlet="forward"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="backward"/>
         <dest obj="object_1" inlet="backward"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="top"/>
         <dest obj="object_1" inlet="top"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="bottom"/>
         <dest obj="object_1" inlet="bottom"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="toggle 1"/>
         <dest obj="object_1" inlet="toggle1"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="toggle 2"/>
         <dest obj="object_1" inlet="toggle2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="up"/>
         <dest obj="counter2_1" inlet="inc"/>
         <dest obj="object_1" inlet="up"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="down"/>
         <dest obj="counter2_1" inlet="dec"/>
         <dest obj="object_1" inlet="down"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L1"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L1"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L2"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L2"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L3"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L3"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1L4"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1_L4"/>
      </net>
      <net>
         <source obj="object_1" outlet="S1mode"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S1mode"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L1"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L1"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L2"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L2"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L3"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L3"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2L4"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2_L4"/>
      </net>
      <net>
         <source obj="object_1" outlet="S2mode"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="S2mode"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 2"/>
         <dest obj="object_1" inlet="button2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 3"/>
         <dest obj="object_1" inlet="button3"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 4"/>
         <dest obj="object_1" inlet="button4"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="button 1"/>
         <dest obj="beatmachine_1" inlet="rst"/>
         <dest obj="object_1" inlet="button1"/>
      </net>
      <net>
         <source obj="object_1" outlet="loadpatch"/>
         <dest obj="load_1" inlet="i"/>
      </net>
      <net>
         <source obj="object_1" outlet="loadtrig"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
      <net>
         <source obj="obj_5" outlet="out"/>
         <dest obj="env_1" inlet="in"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="scope1"/>
      </net>
      <net>
         <source obj="beatmachine_1" outlet="out"/>
         <dest obj="mix_3" inlet="in1"/>
         <dest obj="vca_1" inlet="a"/>
      </net>
      <net>
         <source obj="div_2" outlet="out"/>
         <dest obj="to_1" inlet="i"/>
      </net>
      <net>
         <source obj="to_1" outlet="o"/>
         <dest obj="beatmachine_1" inlet="divider"/>
      </net>
      <net>
         <source obj="mix_3" outlet="out"/>
         <dest obj="obj_1" inlet="in"/>
         <dest obj="phone_interface_buttons_screen_1" inlet="scope2"/>
      </net>
      <net>
         <source obj="adc_1" outlet="left"/>
         <dest obj="obj_5" inlet="in"/>
      </net>
      <net>
         <source obj="dial_1" outlet="out"/>
         <dest obj="beatmachine_1" inlet="x"/>
      </net>
      <net>
         <source obj="dial_2" outlet="out"/>
         <dest obj="beatmachine_1" inlet="y"/>
      </net>
      <net>
         <source obj="dial_3" outlet="out"/>
         <dest obj="beatmachine_1" inlet="z"/>
      </net>
      <net>
         <source obj="dial_4" outlet="out"/>
         <dest obj="beatmachine_1" inlet="startpos"/>
      </net>
      <net>
         <source obj="dial_5" outlet="out"/>
         <dest obj="+_2" inlet="in2"/>
      </net>
      <net>
         <source obj="c3" outlet="out"/>
         <dest obj="div_2" inlet="in"/>
      </net>
      <net>
         <source obj="reverb1_1" outlet="outL"/>
         <dest obj="out_stereo_vol_1" inlet="left"/>
      </net>
      <net>
         <source obj="reverb1_1" outlet="outR"/>
         <dest obj="out_stereo_vol_1" inlet="right"/>
      </net>
      <net>
         <source obj="obj_1" outlet="L"/>
         <dest obj="reverb1_1" inlet="inL"/>
      </net>
      <net>
         <source obj="obj_1" outlet="R"/>
         <dest obj="reverb1_1" inlet="inR"/>
      </net>
      <net>
         <source obj="env_1" outlet="amp"/>
         <dest obj="vca_1" inlet="v"/>
      </net>
      <net>
         <source obj="vca_1" outlet="o"/>
         <dest obj="mix_3" inlet="bus_in"/>
      </net>
      <net>
         <source obj="counter2_1" outlet="o"/>
         <dest obj="+_1" inlet="in2"/>
         <dest obj="object_1" inlet="beat"/>
      </net>
      <net>
         <source obj="object_1" outlet="chdepth"/>
         <dest obj="cc_3" inlet="v"/>
      </net>
      <net>
         <source obj="object_1" outlet="chspeed"/>
         <dest obj="cc_4" inlet="v"/>
      </net>
      <net>
         <source obj="object_1" outlet="revsize"/>
         <dest obj="cc_5" inlet="v"/>
      </net>
      <net>
         <source obj="object_1" outlet="revdecay"/>
         <dest obj="cc_6" inlet="v"/>
      </net>
      <net>
         <source obj="object_1" outlet="chorus"/>
         <dest obj="cc_7" inlet="v"/>
      </net>
      <net>
         <source obj="object_1" outlet="reverb"/>
         <dest obj="cc_8" inlet="v"/>
         <dest obj="dial_6" inlet="in"/>
      </net>
      <net>
         <source obj="object_1" outlet="beatinit"/>
         <dest obj="+_1" inlet="in1"/>
      </net>
      <net>
         <source obj="+_1" outlet="out"/>
         <dest obj="modulo_1" inlet="i"/>
      </net>
      <net>
         <source obj="modulo_1" outlet="o"/>
         <dest obj="beatmachine_1" inlet="beat"/>
         <dest obj="i_1" inlet="in"/>
      </net>
      <net>
         <source obj="i_3" outlet="out"/>
         <dest obj="modulo_1" inlet="m"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 1"/>
         <dest obj="object_1" inlet="dial1"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 2"/>
         <dest obj="object_1" inlet="dial2"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 3"/>
         <dest obj="object_1" inlet="dial3"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 4"/>
         <dest obj="object_1" inlet="dial4"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 5"/>
         <dest obj="object_1" inlet="dial5"/>
      </net>
      <net>
         <source obj="phone_interface_buttons_screen_1" outlet="dial 6"/>
         <dest obj="object_1" inlet="dial6"/>
      </net>
      <net>
         <source obj="dial_7" outlet="out"/>
         <dest obj="div_1" inlet="in"/>
      </net>
      <net>
         <source obj="div_1" outlet="out"/>
         <dest obj="+_2" inlet="in1"/>
      </net>
      <net>
         <source obj="+_2" outlet="out"/>
         <dest obj="beatmachine_1" inlet="rate"/>
         <dest obj="dial_8" inlet="in"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
   </settings>
   <notes><![CDATA[]]></notes>
   <windowPos>
      <x>204</x>
      <y>157</y>
      <width>1920</width>
      <height>1163</height>
   </windowPos>
</patch-1.0>